# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ lib, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "virtio_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/lib/modules/5.15.167.4-microsoft-standard-WSL2" = {
    device = "none";
    fsType = "overlay";
  };

  fileSystems."/mnt/wsl" = {
    device = "none";
    fsType = "tmpfs";
  };

  fileSystems."/usr/lib/wsl/drivers" = {
    device = "drivers";
    fsType = "9p";
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/8e3813fc-d1cd-41fb-98d4-9403ff6476d8";
    fsType = "ext4";
  };

  fileSystems."/mnt/wslg" = {
    device = "none";
    fsType = "tmpfs";
  };

  fileSystems."/mnt/wslg/distro" = {
    device = "";
    fsType = "none";
    options = [ "bind" ];
  };

  fileSystems."/usr/lib/wsl/lib" = {
    device = "none";
    fsType = "overlay";
  };

  fileSystems."/mnt/wslg/doc" = {
    device = "none";
    fsType = "overlay";
  };

  fileSystems."/tmp/.X11-unix" = {
    device = "/mnt/wslg/.X11-unix";
    fsType = "none";
    options = [ "bind" ];
  };

  fileSystems."/mnt/c" = {
    device = "C:\134";
    fsType = "9p";
  };

  fileSystems."/mnt/e" = {
    device = "E:\134";
    fsType = "9p";
  };

  fileSystems."/mnt/f" = {
    device = "F:\134";
    fsType = "9p";
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/ae0537be-cf60-40e7-8dc5-85460f9e2019"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-3fbbb0c6e142.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-598cb7570062.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-84932b613bf8.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-a4ca6dc231d9.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-c4870d1fb88a.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-ebbcb0a62c79.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
